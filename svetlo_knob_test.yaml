blueprint:
  name: Světlo knob
  description: 'Světlo knob upraveno 16.9.2025 — opravená a robustní verze'
  domain: automation
  input:
    remote:
      name: Remote
      description: Moes Knob to use
      selector:
        device:
          integration: zha
          model: TS004F
          multiple: false
    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            domain: light
    step_percent:
      name: Light step
      description: Light percent change for each knob step
      selector:
        number:
          mode: slider
          min: 0
          max: 100
          unit_of_measurement: "%"
      default: 20
    press_light:
      name: Pressed light(s)
      description: The light(s) to control when pressed
      selector:
        target:
          entity:
            domain: light
    press_step_percent:
      name: Pressed light step
      description: Light percent change for each knob step when pressed
      selector:
        number:
          mode: slider
          min: 0
          max: 100
          unit_of_measurement: "%"
      default: 5
    single_press:
      name: Single press
      description: Action to run on single press
      # výchozí no-op akce — tím zabráníme, že vytvořená automatizace bude obsahovat prázdný seznam akcí
      default:
        - delay: '00:00:00'
      selector:
        action: {}
  source_url: https://gist.github.com/gonzaloalbito/3dc06702e941e08298ea9bfade731731

mode: restart
max_exceeded: silent

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - variables:
      command: '{{ trigger.event.data.command }}'
      cluster_id: '{{ trigger.event.data.cluster_id }}'
      endpoint_id: '{{ trigger.event.data.endpoint_id }}'
      mode: '{% if command != "toggle" %}{{ trigger.event.data.args[0] }}{% endif %}'
      steps: '{% if command != "toggle" %}{{ (trigger.event.data.args[1] / 12.5) | int }}{% endif %}'
      step_percent: !input step_percent
      press_step_percent: !input press_step_percent

  - choose:
      - conditions:
          - condition: template
            value_template: '{{ cluster_id == 6 }}'
          - condition: template
            value_template: '{{ endpoint_id == 1 }}'
          - condition: template
            value_template: '{{ command == "toggle" }}'
        # VLOŽÍME přímo akce z inputu. Díky default no-op (výše) nikdy nevznikne prázdný seznam.
        sequence: !input single_press

      - conditions:
          - condition: template
            value_template: '{{ cluster_id == 8 }}'
          - condition: template
            value_template: '{{ endpoint_id == 1 }}'
          - condition: template
            value_template: '{{ command == "step" }}'
          - condition: template
            value_template: '{{ mode == "StepMode.Up" }}'
        sequence:
          - repeat:
              count: 2
              sequence:
                - service: light.turn_on
                  target: !input light
                  data:
                    brightness_step_pct: '{{ step_percent * steps }}'
                    transition: 0.5

      - conditions:
          - condition: template
            value_template: '{{ cluster_id == 8 }}'
          - condition: template
            value_template: '{{ endpoint_id == 1 }}'
          - condition: template
            value_template: '{{ command == "step" }}'
          - condition: template
            value_template: '{{ mode == "StepMode.Down" }}'
          - condition: state
            entity_id: "light.svetlo_jidelna"
            state: "on"
        sequence:
          - repeat:
              count: 2
              sequence:
                - service: light.turn_on
                  target: !input light
                  data:
                    brightness_step_pct: '-{{ step_percent * steps }}'
                    transition: 0.5

      - conditions:
          - condition: template
            value_template: '{{ cluster_id == 768 }}'
          - condition: template
            value_template: '{{ endpoint_id == 1 }}'
          - condition: template
            value_template: '{{ command == "step_color_temp" }}'
          - condition: template
            value_template: '{{ mode == "StepMode.Up" }}'
          - condition: state
            entity_id: light.svetlo_jidelna
            state: "on"
        sequence:
          - service: light.turn_on
            target:
              entity_id: light.svetlo_jidelna
            data:
              color_temp: >
                {% set cur = state_attr("light.svetlo_jidelna", "color_temp") | int(370) %}

                {% set minm = state_attr("light.svetlo_jidelna", "min_mireds") | int(153) %}

                {% set maxm = state_attr("light.svetlo_jidelna", "max_mireds") | int(500) %}

                {% set step_pct = press_step_percent %}

                {% set step = step_pct * (maxm - minm) / 100 %}

                {{ [cur - step, minm] | max | int }}
              transition: 0.5

      - conditions:
          - condition: template
            value_template: '{{ cluster_id == 768 }}'
          - condition: template
            value_template: '{{ endpoint_id == 1 }}'
          - condition: template
            value_template: '{{ command == "step_color_temp" }}'
          - condition: template
            value_template: '{{ mode == "StepMode.Down" }}'
          - condition: state
            entity_id: light.svetlo_jidelna
            state: "on"
        sequence:
          - service: light.turn_on
            target:
              entity_id: light.svetlo_jidelna
            data:
              color_temp: >
                {% set cur = state_attr("light.svetlo_jidelna", "color_temp") | int(370) %}

                {% set minm = state_attr("light.svetlo_jidelna", "min_mireds") | int(153) %}

                {% set maxm = state_attr("light.svetlo_jidelna", "max_mireds") | int(500) %}

                {% set step_pct = press_step_percent %}

                {% set step = step_pct * (maxm - minm) / 100 %}

                {{ [cur + step, minm] | max | int }}
              transition: 0.5


    default: []
